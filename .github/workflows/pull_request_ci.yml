name: CI build to PR

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  code-review:
    runs-on: ubuntu-latest
    env:
      HOME_REPO: /home/repo

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          cache: pip
          cache-dependency-path: .github/workflows/pull_request_ci.yml

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -r dev-requirements.txt
          python -m pip install -r requirements.txt
          python -m pip install git+https://${{secrets.CUSTOM_GITHUB_USER}}:${{secrets.CUSTOM_GITHUB_TOKEN}}@github.com/qilimanjaro-tech/qiboconnection.git@feat/TII-nshots-and-experiments
          python -m pip install git+https://${{secrets.CUSTOM_GITHUB_USER}}:${{secrets.CUSTOM_GITHUB_TOKEN}}@github.com/qilimanjaro-tech/qpysequence.git@tii-demo
          python -m pip install git+https://${{secrets.CUSTOM_GITHUB_USER}}:${{secrets.CUSTOM_GITHUB_TOKEN}}@github.com/qilimanjaro-tech/qilisimulator.git@add-files

      - name: Code Quality
        run: |
          isort .
          black . --check
          flake8
          pylint src -E
          mypy
          interrogate -vv --fail-under=80
          bandit -r src -c .bandit
          mdformat .
          nbqa black .
          nbqa isort .
          nbqa flake8 .
          nbqa mypy .
          nbqa mdformat .

      - name: Install library
        run: |
          GITHUB="false" python -m pip install .

      - name: Test with pytest core
        run: |
          pytest --cov=qililab --cov-report=xml tests/unit

      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: "unittests"
