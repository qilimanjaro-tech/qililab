@startuml

participant MixerBasedSystemControl as mix
participant MixerBasedSystemControlSettings as mixset
participant PulseSequence as pulseseq
participant SignalGenerator as sig
participant AWG as awg

[-> mix ++: run (pulse_sequence, nshots, repetition_duration, path)
mix -> pulseseq ++: get_frequency ()
return pulse_frequency
mix -> mixset ++: get_frequency ()
return my_frequency
opt pulse_frequency is not None AND pulse_frequency != my_frequency
    mix -> mixset ++: get_awg_frequency ()
    mixset -> awg ++: get_frequency ()
    return awg_frequency
    return awg_frequency
    mix -> mixset ++: set_sig_frequency (pulse_frequency + awg_frequency)
    mixset -> sig ++: set_frequency (pulse_frequency + awg_frequency)
    note right of sig: frequency = pulse_frequency + awg_frequency
    return
    return
    mix -> mixset ++: setup_sig ()
    mixset -> sig ++: setup ()
    note right of sig #E68AA3: SignalGenerator setup
    return
    return
end

mix -> mixset ++: run (pulse_sequence, nshots, repetition_duration, path)
mixset -> awg ++: run (pulse_sequence, nshots, repetition_duration, path)
note right of awg #E68AA3: AWG run
return List [Result]
return List [Result]
[<-- mix: List [Result]

@enduml