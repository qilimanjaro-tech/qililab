@startuml

participant PulseSequences as pulseseq
participant Waveforms as waveforms
participant Pulse as pulse
participant PulseShape as pulseshape

[-> pulseseq ++: waveforms (self.awg_frequency, resolution)
pulseseq -> waveforms **: Waveforms ()
activate waveforms
return waveforms
note right of pulseseq: time = 0
loop pulse in pulses
    pulseseq -> pulse ++: get_start
    return start
    note right of pulseseq: wait_time = (start - time) / resolution
    opt wait_time > 0
        note right of pulseseq: waveforms.add (zeros (wait_time), zeros (wait_time))
    end
    note right of pulseseq: time += start
    pulseseq -> pulse ++: modulated_waveforms (self.awg_frequency, resolution)
    pulse -> pulse: envelope (resolution)
    activate pulse #7F1CDB
    pulse -> pulseshape ++: envelope (duration, amplitude, resolution)
    note right of pulseshape: NOT IMPLEMENTED
    return envelope
    return envelope

    note right of pulse: A bunch of calculus with numpy
    return pulse_waveforms
    note right of pulseseq: waveforms += pulse_waveforms
    pulseseq -> pulse ++: get_duration
    return pulse_duration
    note right of pulseseq: time += pulse_duration
end
return waveforms
