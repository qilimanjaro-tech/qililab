@startuml

participant Experiment as exp
participant Loop as loop_

[-> exp: process_loops (results, loops, depth, path, plot)
activate exp
note right of exp: is_the_top_loop = all (loop.previous is False for loop in loops)
note right of exp: pbar = tqdm (minimum_length_loop, depth, is_the_top_loop)
loop values in loops
    exp -> exp: update_tqdm_bar (loops, values, pbar)
    activate exp #7F1CDB
    loop value, loop in zip(values, loops)
            exp -> exp: set_parameter_text_and_value (value, loop)
            activate exp #E6033F
            return descript_aux
    note right of exp: description.append (descript_aux)
    end
    note right of exp: pbar.set_description (description)
    note right of exp: pbar.update ()
    return


    exp -> exp: update_parameters_from_loops_filtering_external_parameters (values, loops)
    activate exp #7F1CDB
    note right of exp #C2A5DC: Experiment update
    return

    exp -> exp: create_loops_from_inner_loops (loops)
    activate exp #7F1CDB
    loop loop in loops
            exp -> loop_ ++: get_next_loop ()
            return loop
            note right of exp: loops_aux.append (loop)
    end
    return loops_aux
    exp -> exp: recursive_loops (loops_aux, results, path, plot, depth + 1)
    activate exp #7F1CDB
    note right of exp #8089FF: Experiment recursive_loops
    return results
end
return results

@enduml
